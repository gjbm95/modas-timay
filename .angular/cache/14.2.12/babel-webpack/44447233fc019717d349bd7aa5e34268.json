{"ast":null,"code":"import { safeIfNeeded } from \"./_util/arrayIterator.mjs\";\nimport { convertToNumber, roundToFloat16Bits } from \"./_util/converter.mjs\";\nimport { DataViewPrototypeGetUint16, DataViewPrototypeSetUint16 } from \"./_util/primordials.mjs\";\n/**\n * returns an unsigned 16-bit float at the specified byte offset from the start of the DataView\n *\n * @param {DataView} dataView\n * @param {number} byteOffset\n * @param {[boolean]} opts\n * @returns {number}\n */\n\nexport function getFloat16(dataView, byteOffset, ...opts) {\n  return convertToNumber(DataViewPrototypeGetUint16(dataView, byteOffset, ...safeIfNeeded(opts)));\n}\n/**\n * stores an unsigned 16-bit float value at the specified byte offset from the start of the DataView\n *\n * @param {DataView} dataView\n * @param {number} byteOffset\n * @param {number} value\n * @param {[boolean]} opts\n */\n\nexport function setFloat16(dataView, byteOffset, value, ...opts) {\n  return DataViewPrototypeSetUint16(dataView, byteOffset, roundToFloat16Bits(value), ...safeIfNeeded(opts));\n}","map":null,"metadata":{},"sourceType":"module"}