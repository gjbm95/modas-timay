{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Usuario/Documents/Trabajos para empresas/Modas Timay Fashion/Pagina web/modas-timay/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { BaseSource } from './basesource.js';\n\nclass FileReaderSource extends BaseSource {\n  constructor(file) {\n    super();\n    this.file = file;\n  }\n\n  fetchSlice(slice, signal) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      return new Promise((resolve, reject) => {\n        const blob = _this.file.slice(slice.offset, slice.offset + slice.length);\n\n        const reader = new FileReader();\n\n        reader.onload = event => resolve(event.target.result);\n\n        reader.onerror = reject;\n        reader.onabort = reject;\n        reader.readAsArrayBuffer(blob);\n\n        if (signal) {\n          signal.addEventListener('abort', () => reader.abort());\n        }\n      });\n    })();\n  }\n\n}\n/**\n * Create a new source from a given file/blob.\n * @param {Blob} file The file or blob to read from.\n * @returns The constructed source\n */\n\n\nexport function makeFileReaderSource(file) {\n  return new FileReaderSource(file);\n}","map":null,"metadata":{},"sourceType":"module"}